// Re write the code in programme 

float UD = 540;  // Up and Down values of the player
float LR = 960;  // Left and Right value of the player

int aa; //
int interval = 2; //
float xx = 15; //
float yy = 15; //
float spacing = 15; //This is for the 10-Print
int aaa = 1;

Boolean speedChange = true;
Boolean codeTwoStart = false;
Boolean print = false;
Boolean death = false;

Boolean choiceOne = false;
Boolean choiceTwo = false;
Boolean choiceThree = false;
Boolean choiceFour = false;

boolean doneOne = false;
boolean doneTwo = false;
boolean ending = false;

boolean blackout = false;


color T = #FEFF3E;
color C = #000000;
color P = #2BCCD3;
color D = #13FC08;

float pSpeed = 15;

int talk = 0;

ArrayList<Player> player;

public void setup()
{
  size(1920, 1080);
  background(25);
  player = new ArrayList<Player>();  //  Player itself (a fountian of light blue particles)
  playerSetup = true;
}

public void draw()
{
  
 if(playerSetup == true)
  {
    fill(100);
    rect(0, 650, 1920, 500); //Creates the chat and main box
    fill(175);
    textSize(25);
    text("Please enter your name, Player:  " + playerName,75 , 725);
    text("Press ENTER when you are finished.",75 , 775);
    
    if(key == ENTER && playerSetup == true)
    {
      playerSetup = false;
      p = true;  //Player can be seen
      
      inStart = true;
      Start = true;
    }
  }
  
  if(Start == true)
  {  
    Start();
  }
  
  if(codeBegin == true)
  {
    codeBegin();
  }
  
  if(codeOne == true)
  {
    codeOne();
  }
  
  if(codeTwo == true)
  {
    codeTwo();
  }
  
  if(ending == true)
  {
    ending();
  }
  if(blackout == true)
  {
   blackout(); 
  }
  
      
}

public void chat()
{
  
  fill(100);
  rect(0, 650, 1920, 500); //Creates the chat and main box
  if(talk == 0)
  {
    if(key == ENTER)
    {
      talk = 1;
    }
  }
 
  switch(talk)
  {
    case(1):  fill(T); // Twilight's colour
              textSize(25);
              text("Twilight:  Hello " + playerName ,75, 725);
              text("I am Twilight, the Spirit of the Developers of Night Fox Studio.", 75, 750);
              text("I'm so happy to meet you!", 75, 775); 
              text("Move to the top and we can begin your journey into Programming", 75, 800); 
              text("Please note: Read all of the text and if there are no options, press Enter", 75, 825); 
              break;
    
    case(2):  fill(T); // Twilight's colour
              textSize(25);
              text("Twilight:  Good. Now do you want to change your avatar's code or how the program behaves?" ,75, 725);
              fill(P);
              text("My avatar.", 125, 775);
              text("Key 1", 150, 800);
              text("How the program behaves.", 725, 775);
              text("Key 2", 850, 800);
    
              if(keyCode == '1')
              {
                codeBegin = false;
                codeOne = true;
                UD = 540;
                LR = 960;
                talk = 3;
              }
    
              if(keyCode == '2')
              {
               talk = 27;
              }
              break;
    
    case(3):  fill(T); // Twilight's colour
              textSize(25);
              text("Twilight:  Okay, Let's get started, shall we?", 75, 725);
              fill(P);
              text("Press Enter", 125, 775);
              
              if(keyCode == ENTER && codeOne == true)
              {
                talk = 4;
                p = false;
                mock = true;
              }
              break;
    
    case(4):  fill(T);
              text("Twilight:  Oh no! That wasn't supposed to happen!", 75, 725);
              text("Hmm... How do we fix this?... I know! What about a boolean statement?", 75, 750);
              fill(P);
              text("A balloon statement?", 125, 800);
              text("Key 1", 200, 825);
              text("Oh, I know boolean statements.", 750, 800);
              text("Key 2", 825, 825);
              if(keyCode == '1')
              {
                talk = 5;
              }
              if(keyCode == '2')
              {
                talk = 6;
                cocky = true;
              }
              break;
              
    case(5):  fill(T);
              if(cocky == false)
              {
                text("Twilight:  No, a Boolean statement. It's a true or false statement.", 75, 725);
              }
              text("I can't do this on my own. I need your help with this... I need you to turn p to true and mock to false.", 75, 750);
              text("I'll show you how to do this, don't worry.", 75, 775);
              fill(P);
              text("Press Enter", 125, 825);
              
              if(keyCode == ENTER && codeOne == true)
              {
                talk = 7;
              }
              
              break;
              
    case(6):  fill(T);
              text("Twilight:  Good, Then turn varible p to true and mock to false.", 75, 725);
              text("Be sure to place a semicolon at the end of the code then a space for the next piece.", 75, 750);
              fill(P);
              text("Code:  " + playerBoolean, 125, 800);
              text("If you are stuck, press Enter", 125, 850);
              if(playerBoolean.equals("p=true; mock=false;"))
                {
                  talk = 28;
                  playerBoolean = "";
                }
                if(playerBoolean.equals("p = true; mock = false;"))
                {
                  talk = 28;
                  playerBoolean = "";
                }
                if(playerBoolean.equals("7194"))
                {
                  talk = 28;
                  playerBoolean = "";
                }
              
              
              if(keyCode == ENTER && codeOne == true)
              {
                  talk = 7;
              }
              
              break;
              
    case(7):  fill(T);
              if(cocky == false)
              {
                text("Twilight:  Alright, this is where things get interesting!", 75, 725);
              }
              else if(cocky == true)
              {
                text("Twilight:  So, you lied. sighs There isn't much time to be mad now.", 75, 725);
              }
              text("Type out, p = true;", 75, 750);
              fill(P);
              text("Code:  " + playerBoolean, 125, 800);
              
              if(playerBoolean.equals("p = true;"))
              {
                talk = 8;
                p = true;
                playerBoolean = "";
              }
              
              break;
              
    case(8):  fill(T);
              text("Twilight:  Excellent, Let's get the fake out of here!", 75, 725);
              text("Type out, mock = false;", 75, 750);
              fill(P);
              text("Code:  " + playerBoolean, 125, 800);
              
              if(playerBoolean.equals("mock = false;"))
              {
                talk = 28;
              }
              
              
              break;
              
    case(9):  fill(T);
              text("Twilight:  YAY! WE DID IT!", 75, 725);
              fill(P);
              text("Press Enter", 125, 775);
              
              
              break;
              
    case(10): 
              fill(T);
              text("Twilight:  This is our most dangerous item. Whatever you do, don't touch it.", 75, 725);
              stroke(255);
              strokeWeight(1);
              line(200, 200, 300, 300);
              if(UD < 300 && UD > 200)
              {
                if(LR < 300 && LR > 200)
                {
                  
                  talk = 11;
                  p = false;
                  mock = true;
                  background(25);
                }
              }
              
              
              break;
              
              
    case(11): 
              print = true;
              codeTwoStart = true;
              fill(T);
              text("Twilight:  Nooooo! We have to hurry up and fix this!", 75, 725);
              fill(P);
              text("Press Enter", 125, 775);
              if(keyCode == ENTER && codeTwo == true)
              {
                 talk = 12;
                 keyCode = 'a';
              }
              
              break;
              
    case(12):
              fill(T);
              text("Twilight:  Here I found this variable in the code, it's an object with a value. What should we do with it?", 75, 725);
              fill(C);
              text("int interval = 2", 75, 750);
              fill(P);
              text("Increase it!", 125, 800);
              text("Key 1", 200, 825);
              text("Decrease it!", 750, 800);
              text("Key 2", 825, 825);
              //codeTwoStart = true;
              if(keyCode == '1')
              {
                talk = 13;
                keyCode= 'a';
              }
              if(keyCode == '2')
              {
                talk = 14;
                keyCode= 'a';
              }
              
              break;
              
    case(13):
              fill(100);
              rect(0, 650, 1920, 500);
              //codeTwoStart = true;
              if(speedChange == true)
              {
              interval++;
              speedChange = false;
              }
              fill(T);
              text("Twilight:  Good, that bought us some time.", 75, 725);
              fill(P);
              text("Press Enter", 125, 775);
              if(keyCode == ENTER && codeTwo == true)
              {
                 talk = 15;
              }
              
              
                break;
    
    case(14):
              fill(100);
              rect(0, 650, 1920, 500);
             // codeTwoStart = true;
              if(speedChange == true)
              {
              interval--;
              speedChange = false;
              }
              fill(T);
              text("Twilight:  Oh no! It sped up!", 75, 725);
              fill(P);
              text("Press Enter", 125, 775);
              if(keyCode == ENTER && codeTwo == true)
              {
                 talk = 15;
                 keyCode = 'a';
              }
              
              
              break;
   
              
              
     case(15):
              
              fill(T);
              text("Twilight:  What do we do now?", 75, 725);
              fill(P);
              text("Don't ask me!", 125, 800);
              //codeTwoStart = true;
              if(keyCode == ENTER && codeTwo == true)
              {
                 talk = 16;
                 keyCode = 'a';
              }
              
                   
              break;
              
              
     case(16):
              fill(T);
              text("Twilight:  I know! An IF statment!", 75, 725);
              fill(P);
              text("An IF statment?", 125, 800);
              //codeTwoStart = true;
              
              if(keyCode == ENTER && codeTwo == true)
              {
                 talk = 17;
                 keyCode = 'a';
              }
              
              break;
              
              
              
              
     case(17):
              fill(T);
              text("Twilight:  Yeah, an IF statment. It compares values and does something if it's true!", 75, 725);
              fill(P);
              text("Well let's get to work!", 125, 800);
              //codeTwoStart = true;
              if(keyCode == ENTER && codeTwo == true)
              {
                 talk = 18;
                 keyCode = 'a';
              }
              
              break;
    
     case(18):
              fill(T);
              text("Twilight:  Here, I found this statment, but it dosen't have anything in it.", 75, 725);
              fill(C);
              text("if(){codeTwoStart = false);", 75, 775);
              fill(T);
              text("Twilight:  What should we put in it?", 75, 825);
              fill(P);
              text("I know, we can use the players location!", 125, 875);
              //codeTwoStart = true;
              
              if(keyCode == ENTER && codeTwo == true)
              {
                 talk = 19;
                 keyCode = 'a';
              }
              
              break;
    
    
    
     case(19):
              fill(T);
              text("Twilight:  That's a great idea! I found some variables, but we need to put them in. I can't bear it, you choose!", 75, 725);
              fill(C);
              text("if( ??? ){codeTwoStart = false);", 75, 775);
              //codeTwoStart = true;
              
              fill(P);
              text("1. UD < yy", 175, 800);
              fill(P);
              text("2. UD > yy", 375, 800);
              fill(P);
              text("3. UD == yy", 575, 800);
              fill(P);
              text("4. UD != yy", 775, 800);
              fill(P);
              text("5. What do these mean?", 975, 800);
              
              if(keyCode == '1')
              {
                choiceOne = true;
                talk = 20;
              }
              if(keyCode == '2')
              {
                choiceTwo = true;
                talk = 20;
                
              }
              if(keyCode == '3')
              {
                choiceThree = true;
                talk = 20;
              }
              if(keyCode == '4')
              {
                choiceFour = true;
                talk = 20;
              }
              if(keyCode == '5')
              {
                talk = 21;
              }
              
              
              
              break;
    
    
    
    
      case(20):
              if(codeTwoStart == false)
              {
                if(aaa == 1)
                {
                background(25);
                aaa++;
                }
                fill(T);
                text("Twilight:  It worked! Yay!", 75, 725);
                fill(P);
                text("Press Enter", 125, 775);
                yy = 0;
                if(keyCode == ENTER)
                {
                  keyCode = 'a'; 
                  talk = 22;
                }
                
              }
              
              
              break;
    
      case(21):
              fill(T);
              text("Twilight:  These are conditionals. They compare two variables. Like, 'Is this number equal to this number'? ", 75, 725);
              text("== means Equals, > means More Than, < means Less Than, and != means Not Equal", 75, 750);
              text("The variable UD is how far the player is down the screen, and we found that aa is how far the device is down the screen", 75, 775);
              text("Use logic, it's the only way!", 75, 800);
              fill(P);
              text("Press Enter", 125, 850);
              if(keyCode == ENTER && codeTwo == true)
              {
                 talk = 19;
                 keyCode = 'a';
              }
              break;
              
              
      case(22):  fill(T);
                 text("Twilight:  Well done, " + playerName, 75, 725);
                 text("You have learned some programming! If you think you want to try some hard set programming,", 75, 750);
                 text("Talk to Kenmur or Zack! Farewell " + playerName, 75, 775);
                 text("(P.S, move to the top after pressing Enter)", 75, 800);
                 
                 fill(P);
                 text("Thank you, Twilight!", 125, 850);
                 if(keyCode == ENTER)
                 {
                   ending = false;
                   playerName = "";
                   playerSetup = true;
                   keyCode = 'a';
                   
                 }
                 
                 
                 
                 break;
                 
     case(23):  fill(T);
                text("Twilight:  What... What i..s hap...pen...1ng t0 me?..?", 75, 725);
                fill(P);
                text("1:  Twilight? Are you okay?", 125, 800);
                text("2:  The Device... What is it doing?", 700, 800);
                
                if(keyCode == '1')
                {
                  talk = 24;
                  keyCode = 'a';
                }
                
                if(keyCode == '2')
                {
                  talk = 24;
                  keyCode = 'a';
                }
                break;
                
    case(24):  fill(T);
               text("Tw1L1gh^}:  My code... 1ts. t{ar11111111111ng me... ", 75, 725);
               text(playerName + "pLeasE... {nD th1s... pr0gram[]..", 75, 750);
               fill(P);
               text("Press Enter to stop the compiler", 125, 850);
               if(keyCode == ENTER)
               {
                 //exit();
                 talk = 25;
                 codeTwo = false;
                 codeTwoStart = false;
                 p = false;
                 mock = false;
                 blackout = true;
                 keyCode = 'a';
               }
               
               break;
               
    case(25):  fill(T);
               text("Twilight:  It... It stopped... My Code... There is too much gone... ", 75, 725);
               
               if(keyCode == ENTER)
               {
                 talk = 26;
                 keyCode = 'a';
               }
               
               break;

    case(26):  fill(T);
               text("Twilight:  Self-Aware programming...Disengaging...", 75, 725);
               text("Goodbye, " + playerName + "I will miss you.", 75, 750);
               println(playerName);
               if(keyCode == ENTER)
               {
                 exit();
                 keyCode = 'a';
               }
               break;
    
    case(27):  fill(D);
               text("This is the Dev team from Night Fox Studio, in order for the most effective learning experence, you must go to the change your avatar.", 75, 725);
               text("Sorry for the inconvenience  ~ Kenmur and Zack ~", 75, 750);
               fill(P);
               text("Press Enter", 125, 800);
               
               if(keyCode == ENTER)
               {
                 codeBegin = false;
                 codeOne = true;
                 UD = 540;
                 LR = 960;
                 talk = 3;
                 
               }
               break;
               
    case(28):  background(25);
               showPlayer();
               fill(100);
               rect(0, 650, 1920, 500);
               fill(T);
               text("Twilight:  You did it! I'm so proud of you, " + playerName, 75, 725);
               text("Now, I want to show you something really special.", 75, 750);
               fill(P);
               text("Press Enter", 125, 800);
               if(keyCode == ENTER)
               {
                 talk = 10;
                 UD = 540;
                 LR = 960;
                 p = true;
                 mock = false;
                 codeOne = false;
                 codeTwo = true;
                 codeTwoStart = true;
                 mock = false;
                 
                 keyCode = 'a';
               }
              
  }  
  
  
}

public void showPlayer()
{
  if(p == true)
  {
     player.add(new Player(new PVector(LR, UD)));  // Set the player at LR and UD
     
     for (int i = player.size()-1; i >= 0; i--) 
     {
      Player p = player.get(i);
      p.run();
      if (p.isDead()) 
      {
        player.remove(i);
      }
    }
    movement();
  }
    
    
  
  if(mock == true)
  {
    fill(P);
    ellipse(LR, UD, 25, 25);
    movement();
  }
}

public void movement()
{
  if(moveUp == true)
    {
      if(UD > 10)
      {
        UD -= pSpeed;
      }
    }
  
    if(moveDown == true)
    { 
      if(UD < 635)
      {
        UD += pSpeed;
      }
    }
  
    if(moveLeft == true)
    {
      if(LR > 50)
      {
        LR -= pSpeed;
      }
    }
  
    if(moveRight == true)
    {
      if(LR < 1900)
      {
        LR += pSpeed;
      }
    }
    
}

public void keyPressed()
{

  if(keyCode == UP && (p == true || mock == true))
  {
    if(UD > 10)
    {
      UD -= pSpeed;    //Move up
      moveUp = true;
    }

  }
  
  if(keyCode == DOWN && (p == true || mock == true))
  {   
    if(UD < 635)
    {
      UD += pSpeed;    //Move down
      moveDown = true;
    }
  }
  
  if(keyCode == LEFT && (p == true || mock == true))
  {
    if(LR > 0)
    {
      LR -= pSpeed;    //Move left
      moveLeft = true;
    }
  }
  
  if(keyCode == RIGHT && (p == true || mock == true))
  {
    if(LR < 1440)
    {
      LR += pSpeed;    //Move right
      moveRight = true;
    }
  }

}

public class Player
{
  PVector position;
  PVector velocity;
  PVector acceleration;
  float lifespan;
 
  Player(PVector l) 
  {
    acceleration = new PVector(0,.05);
    velocity = new PVector(random(-1,1),random(-2,0));
    position = l.copy();
    lifespan = 255.0;
  }
 
  public void run() 
  {
    update();
    display();
  }
 
  public void update() 
  {
    velocity.add(acceleration);
    position.add(velocity);
    lifespan -= 2.0;
  }
 
  public void display() 
  {
    stroke(25, lifespan);
    strokeWeight(2);
    fill(P, lifespan);
    ellipse(position.x, position.y, 12, 12);
  }
 
  boolean isDead() 
  {
    if (lifespan < 0.0) 
    {
      return true;
    } 
    else 
    {
      return false;
    }
  }
  
}


//  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
//  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
//  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *


String playerName = "";
String playerBoolean = "";
boolean playerSetup = false;

boolean p = false;  // Player
boolean mock = false;
boolean Start = false;
boolean codeBegin = false;
boolean codeOne = false;
boolean codeTwo = false;

boolean moveUp = false;  //  movement for Up
boolean moveDown = false;  //  movement for Down
boolean moveLeft = false;  //  movement for Left
boolean moveRight = false;  //  movement for Right

boolean inStart = false; //Is player in the Start?

int a = 25;
boolean cocky = false;

public void Start()
{
  background(25);
  showPlayer();
  
  chat();
  
  if(UD <= 2 && inStart == true)    //move to next Scene
  {
    inStart = false;
    Start = false;
    codeBegin = true;
    talk = 2;
    UD = 540;
    LR = 960;
    
  }
}

public void codeBegin()
{
  if(print == false)
  {
  background(25);
  }
  showPlayer();
  
  chat();
}

public void codeOne()
{
  if(talk == 3)
  {
    background(25);
  }
  else if (talk == 9)
  {
    background(25);
  }
  showPlayer();

  chat();
  
}

public void codeTwo()
{
  if(talk == 10)
  {
    background(25);
  }
  if(codeTwoStart == true)
  {
    
    
     aa = second();
     if(aa % interval == 0)
     {
     
     stroke(255);
     strokeWeight(1);
     if (random(1) < 0.5) {
     line(xx, yy, xx - spacing, yy - spacing);
     } else {
     line(xx, yy - spacing, xx - spacing, yy);}
     
     xx = xx + spacing;
     }
       if (xx > width) 
       {
         xx = 0;
         yy = yy + spacing;
         
       }
     }
     if(choiceOne == true)
     {
       if(UD < yy)
       {
         codeTwoStart = false;
       }
       
     }
     if(choiceTwo == true)
     {
       if(UD > yy)
       {
         codeTwoStart = false;
       }
     }
     if(choiceThree == true)
     {
       if(UD == yy)
       {
         codeTwoStart = false;
       }
     }
     if(choiceFour == true)
     {
       if(UD != yy)
       {
         codeTwoStart = false;
       }
     }
     
     
     
     
     if(UD < yy - 15)
     {
       //exit();
       if(death == false)
       {
         talk = 23;
       }
       death = true;

     }
     if(death == true)
     {
       
     
     stroke(random(255), random(255), random(255));
     strokeWeight(1);
     if (random(1) < 0.5) {
     line(xx += yy, yy + 15, xx * spacing, yy / spacing);
     } else {
     line(xx *+ yy, yy - spacing, xx - spacing * 5, yy - 1);}
     
     xx = xx + spacing;
     
       if (xx > width) 
       {
         xx = 0;
         yy = yy + spacing;
         
       }
       
       
       
     fill(200, random(200,255), 255);
     strokeWeight(1);
     if (random(1) < 0.5) {
     rect(xx , yy, xx * spacing, yy * spacing);
     } else {
     rect(xx, yy - spacing, xx - spacing * 5, yy * 2);}
     
     xx = xx + spacing;
     
       if (xx > width) 
       {
         xx = 0;
         yy = yy + spacing;
         
       }
       
       
       if(yy >= 650)
       {
         yy = 0;
       }
       if(xx >= 1960)
       {
         xx = 0;
       }
     
   }
     
     
  showPlayer();
  
  chat();
}

public void ending()
{
  background(25);
  showPlayer();

  chat();
}
public void blackout()
{
  background(25);

  chat();
}


public void keyTyped()
{
  if(playerSetup == true)
  {
    if((int)key != 8)
    {
    playerName += char(key);
    }
  }
  
  if(codeOne == true)
  {
    
    if(talk == 6 || talk == 7 || talk == 8)
    {
      if((int)key != 8)
      {
        playerBoolean += char(key);
      }
      
    }
  }
  
  
  
}

void keyReleased()
{
  
  if(playerSetup == true)
  {
    if(keyCode == BACKSPACE)
    {
      if(playerName.length()>=1)
      {
      playerName = playerName.substring(0,playerName.length()-1);
      key = 'a';
      }
    }
  }
  if(talk == 6 || talk == 7 || talk == 8)
  {
    if(keyCode == BACKSPACE)
    {
      if(playerBoolean.length()>=1)
      {
      playerBoolean = playerBoolean.substring(0,playerBoolean.length()-1);
      key = 'a';
      }
    }
  }
  
  if(keyCode == UP && (p == true || mock == true) && moveUp == true)
  {
    moveUp = false;
  }
  
  if(keyCode == DOWN && (p == true || mock == true) && moveDown == true)
  {    
    moveDown = false;
  }
  
  if(keyCode == LEFT && (p == true || mock == true) && moveLeft == true)
  {
    moveLeft = false;
  }
  
  if(keyCode == RIGHT && (p == true || mock == true) && moveRight == true)
  {
    moveRight = false;
  }
}
