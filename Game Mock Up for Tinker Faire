
// Re write the code in programme 

float UD = 540;  // Up and Down values of the player
float LR = 960;  // Left and Right value of the player

color T = #BC0265;
color P = #2BCCD3;

float pSpeed = 15;

int talk = 0;

ArrayList<Player> player;

public void setup()
{
  size(1920, 1080);
  background(25);
  player = new ArrayList<Player>();  //  Player itself (a fountian of light blue particles)
  playerSetup = true;
}

public void draw()
{
  
 if(playerSetup == true)
  {
    fill(100);
    rect(0, 650, 1920, 500); //Creates the chat and main box
    fill(175);
    textSize(25);
    text("Please enter your name, Player:  " + playerName,75 , 725);
    text("Press ENTER when you are finished.",75 , 775);
    
    if(key == ENTER && playerSetup == true)
    {
      playerSetup = false;
      p = true;  //Player can be seen
      
      inStart = true;
      Start = true;
    }
  }
  
  if(Start == true)
  {  
    Start();
  }
  
  if(codeBegin == true)
  {
    codeBegin();
  }
  
  if(codeOne == true)
  {
    codeOne();
  }
  
  if(codeTwo == true)
  {
    codeTwo();
  }
  
}

public void chat()
{
  
  fill(100);
  rect(0, 650, 1440, 250); //Creates the chat and main box
  if(talk == 0)
  {
    if(key == ENTER)
    {
      talk = 1;
    }
  }
 
  switch(talk)
  {
    case(1):  fill(T); // Twilight's colour
              textSize(25);
              text("Twilight:  Hello " + playerName ,75, 725);
              text("I am Twilight, the Spirit of the Developers of Falling Fox Studio.", 75, 750);
              text("I will reveal my programming that you can change.", 75, 775); 
              text("Move to the top and we can begin your journey into Programming", 75, 800); 
              break;
    
    case(2):  fill(T); // Twilight's colour
              textSize(25);
              text("Twilight:  Good. Now do you want to change your avatar's code or how the program behaves?" ,75, 725);
              fill(P);
              text("My avatar.", 125, 775);
              text("Key 1", 150, 800);
              text("How the program behaves.", 725, 775);
              text("Key 2", 850, 800);
    
              if(keyCode == '1')
              {
                codeBegin = false;
                codeOne = true;
                UD = 540;
                LR = 960;
                talk = 3;
              }
    
              if(keyCode == '2')
              {
                codeBegin = false;
                codeTwo = true;
                UD = 540;
                LR = 960;
                talk = 4;
              }
              break;
    
    case(3):  fill(T); // Twilight's colour
              textSize(25);
              text("Twilight:  Okay, Let's get started, shall we?", 75, 725);
              fill(P);
              text("Press Enter", 125, 775);
              
              if(keyCode == ENTER && codeOne == true)
              {
                talk = 4;
                p = false;
                mock = true;
              }
              break;
    
    case(4):  fill(T);
              text("Twilight:  Oh Celestia! That wasn't supposed to happen!", 75, 725);
              text("Hmm... How do we fix this?... I know! What about a boolean statement?", 75, 750);
              fill(P);
              text("A balloon statement?", 125, 800);
              text("Key 1", 200, 825);
              text("Oh, I know boolean statements.", 750, 800);
              text("Key 2", 825, 825);
              if(keyCode == '1')
              {
                talk = 5;
              }
              if(keyCode == '2')
              {
                talk = 6;
                cocky = true;
              }
              break;
              
    case(5):  fill(T);
              if(cocky == false)
              {
                text("Twilight:  No, a Boolean statement. It's a true or false statement.", 75, 725);
              }
              text("I can't do this on my own. I need your help with this... I need you to turn p to true and mock to false.", 75, 750);
              text("I'll show you how to do this, don't worry.", 75, 775);
              fill(P);
              text("Press Enter", 125, 825);
              
              if(keyCode == ENTER && codeOne == true)
              {
                talk = 7;
              }
              
              break;
              
    case(6):  fill(T);
              text("Twilight:  Good, Then turn varible p to true and mock to false.", 75, 725);
              text("Be sure to place a semicolon at the end of the code then a space for the next piece.", 75, 750);
              fill(P);
              text("Code:  " + playerBoolean, 125, 800);
              text("If you are stuck, press Enter", 125, 850);
              if(playerBoolean.equals("p=true; mock=false;"))
                {
                  talk = 9;
                  playerBoolean = "";
                }
                if(playerBoolean.equals("p = true; mock = false;"))
                {
                  talk = 9;
                  playerBoolean = "";
                }
              
              
              if(keyCode == ENTER && codeOne == true)
              {
                  talk = 7;
              }
              
              break;
              
    case(7):  fill(T);
              if(cocky == false)
              {
                text("Twilight:  Alright, this is where things get interesting!", 75, 725);
              }
              else if(cocky == true)
              {
                text("Twilight:  So, you lied. *sighs* There isn't much time to be mad now.", 75, 725);
              }
              text("Type out, p = true;", 75, 750);
              fill(P);
              text("Code:  " + playerBoolean, 125, 800);
              
              if(playerBoolean.equals("p = true;"))
              {
                talk = 8;
                p = true;
                playerBoolean = "";
              }
              
              break;
              
    case(8):  fill(T);
              text("Twilight:  Excellent, Let's get the fake out of here!", 75, 725);
              text("Type out, mock = false;", 75, 750);
              fill(P);
              text("Code:  " + playerBoolean, 125, 800);
              
              if(playerBoolean.equals("mock = false;"))
              {
                talk = 9;
                mock = false;
              }
              
              
              break;
              
    case(9):  fill(T);
              text("YAY! WE DID IT! Now you know a bit of coding. Let's go learn about the System Operator now.", 75, 725);
              fill(P);
              text("Press Enter", 125, 775);
              
              if(keyCode == ENTER && codeOne == true)
              {
                codeOne = false;
                codeTwo = true;
              }
              
              
              break;
    
    
  }
  
  
}

public void showPlayer()
{
  if(p == true)
  {
     player.add(new Player(new PVector(LR, UD)));  // Set the player at LR and UD
     
     for (int i = player.size()-1; i >= 0; i--) 
     {
      Player p = player.get(i);
      p.run();
      if (p.isDead()) 
      {
        player.remove(i);
      }
    }
    movement();
  }
    
    
  
  if(mock == true)
  {
    fill(P);
    ellipse(LR, UD, 25, 25);
    movement();
  }
}

public void movement()
{
  if(moveUp == true)
    {
      if(UD > 2)
      {
        UD -= pSpeed;
      }
    }
  
    if(moveDown == true)
    { 
      if(UD < 650)
      {
        UD += pSpeed;
      }
    }
  
    if(moveLeft == true)
    {
      if(LR > 0)
      {
        LR -= pSpeed;
      }
    }
  
    if(moveRight == true)
    {
      if(LR < 1440)
      {
        LR += pSpeed;
      }
    }
    
}

public void keyPressed()
{

  if(keyCode == UP && (p == true || mock == true))
  {
    if(UD > 2)
    {
      UD -= pSpeed;    //Move up
      moveUp = true;
    }

  }
  
  if(keyCode == DOWN && (p == true || mock == true))
  {   
    if(UD < 650)
    {
      UD += pSpeed;    //Move down
      moveDown = true;
    }
  }
  
  if(keyCode == LEFT && (p == true || mock == true))
  {
    if(LR > 0)
    {
      LR -= pSpeed;    //Move left
      moveLeft = true;
    }
  }
  
  if(keyCode == RIGHT && (p == true || mock == true))
  {
    if(LR < 1440)
    {
      LR += pSpeed;    //Move right
      moveRight = true;
    }
  }

}

public class Player
{
  PVector position;
  PVector velocity;
  PVector acceleration;
  float lifespan;
 
  Player(PVector l) 
  {
    acceleration = new PVector(0,.05);
    velocity = new PVector(random(-1,1),random(-2,0));
    position = l.copy();
    lifespan = 255.0;
  }
 
  public void run() 
  {
    update();
    display();
  }
 
  public void update() 
  {
    velocity.add(acceleration);
    position.add(velocity);
    lifespan -= 2.0;
  }
 
  public void display() 
  {
    stroke(25, lifespan);
    strokeWeight(2);
    fill(P, lifespan);
    ellipse(position.x, position.y, 12, 12);
  }
 
  boolean isDead() 
  {
    if (lifespan < 0.0) 
    {
      return true;
    } 
    else 
    {
      return false;
    }
  }
  
}

















//  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
//  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
//  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
//  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
//  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
//  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
//  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
//  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
//  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
//  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
//  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
//  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
//  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *














String playerName = "";
String playerBoolean = "";
boolean playerSetup = false;

boolean p = false;  // Player
boolean mock = false;
boolean Start = false;
boolean codeBegin = false;
boolean codeOne = false;
boolean codeTwo = false;

boolean moveUp = false;  //  movement for Up
boolean moveDown = false;  //  movement for Down
boolean moveLeft = false;  //  movement for Left
boolean moveRight = false;  //  movement for Right

boolean inStart = false; //Is player in the Start?

int a = 25;
boolean cocky = false;

public void Start()
{
  background(25);
  showPlayer();
  
  chat();
  
  if(UD <= 2 && inStart == true)    //move to next Scene
  {
    inStart = false;
    Start = false;
    codeBegin = true;
    talk = 2;
    UD = 540;
    LR = 960;
    
  }
}

public void codeBegin()
{
  background(25);
  showPlayer();
  
  chat();
}

public void codeOne()
{
  if(talk == 3)
  {
    background(25);
  }
  else if (talk == 9)
  {
    background(25);
  }
  showPlayer();

  chat();
  
}

public void codeTwo()
{
  
}


public void keyTyped()
{
  if(playerSetup == true)
  {
    if((int)key != 8)
    {
    playerName += char(key);
    }
  }
  
  if(codeOne == true)
  {
    
    if(talk == 6 || talk == 7 || talk == 8)
    {
      if((int)key != 8)
      {
        playerBoolean += char(key);
      }
      
    }
  }
  
  
  
}

void keyReleased()
{
  
  if(playerSetup == true || talk == 6 || talk == 7 || talk == 8)
  {
    if(keyCode == BACKSPACE)
    {
      if(playerName.length()>=1)
      {
      playerName = playerName.substring(0,playerName.length()-1);
      key = 'a';
      }
    }
  }
  
  if(keyCode == UP && (p == true || mock == true) && moveUp == true)
  {
    moveUp = false;
  }
  
  if(keyCode == DOWN && (p == true || mock == true) && moveDown == true)
  {    
    moveDown = false;
  }
  
  if(keyCode == LEFT && (p == true || mock == true) && moveLeft == true)
  {
    moveLeft = false;
  }
  
  if(keyCode == RIGHT && (p == true || mock == true) && moveRight == true)
  {
    moveRight = false;
  }
}
